[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/App.js",
    "content": "import React, { useContext, useEffect } from 'react';\nimport Routes from './components/routes/routes';\nimport { AuthContext } from './components/context/auth-context';\n\nconst App = () => {\n  const authContext = useContext(AuthContext);\n  useEffect(() => {\n    authContext.checkAuthState();\n    authContext.seedFirebase();\n  }, [authContext]);\n  return <Routes />;\n};\n\nexport default App;\n",
    "static": true,
    "longname": "C:/Users/Osa/Documents/inventory-mgmt/src/App.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "function",
    "name": "App",
    "memberof": "src/App.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/App.js~App",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/App.js",
    "importStyle": "App",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 2,
    "kind": "file",
    "name": "src/components/actions/actions.js",
    "content": "export const START = 'START';\r\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nexport const AUTH_FAILED = 'AUTH_FALIED';\r\n",
    "static": true,
    "longname": "C:/Users/Osa/Documents/inventory-mgmt/src/components/actions/actions.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 3,
    "kind": "variable",
    "name": "START",
    "memberof": "src/components/actions/actions.js",
    "static": true,
    "longname": "src/components/actions/actions.js~START",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/components/actions/actions.js",
    "importStyle": "{START}",
    "description": null,
    "lineNumber": 1,
    "undocument": true
  },
  {
    "__docId__": 4,
    "kind": "variable",
    "name": "AUTH_SUCCESS",
    "memberof": "src/components/actions/actions.js",
    "static": true,
    "longname": "src/components/actions/actions.js~AUTH_SUCCESS",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/components/actions/actions.js",
    "importStyle": "{AUTH_SUCCESS}",
    "description": null,
    "lineNumber": 2,
    "undocument": true
  },
  {
    "__docId__": 5,
    "kind": "variable",
    "name": "AUTH_FAILED",
    "memberof": "src/components/actions/actions.js",
    "static": true,
    "longname": "src/components/actions/actions.js~AUTH_FAILED",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/components/actions/actions.js",
    "importStyle": "{AUTH_FAILED}",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 6,
    "kind": "file",
    "name": "src/components/context/auth-context.js",
    "content": "import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nexport const AuthContext = React.createContext({\r\n  isAuth: false,\r\n  isError: null,\r\n  isLoading: true,\r\n  token: null,\r\n  localId: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n  checkAuthState: () => {},\r\n  seedFirebase: () => {}\r\n});\r\n\r\nconst AuthContextProvider = props => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [token, setToken] = useState(null);\r\n  const [localId, setLocalId] = useState(null);\r\n  const logOut = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('localId');\r\n    localStorage.removeItem('expirationDate');\r\n    setToken(null);\r\n    setLocalId(null);\r\n    setIsAuthenticated(false);\r\n  };\r\n  const checkTimeLeft = expiresIn =>\r\n    setTimeout(() => logOut(), expiresIn * 1000);\r\n\r\n  const loginHandler = (email, password) => {\r\n    const data = {\r\n      email,\r\n      password,\r\n      returnSecureToken: true\r\n    };\r\n    setLoading(true);\r\n    axios\r\n      .post(\r\n        'https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=AIzaSyApdoPvXyD47JguP_5ydYI_Xhd6QxbnwBc',\r\n        data\r\n      )\r\n      .then(resp => {\r\n        setLoading(false);\r\n        setToken(resp.data.idToken);\r\n        setLocalId(resp.data.localId);\r\n        const expirationDate = new Date(\r\n          new Date().getTime() + resp.data.expiresIn * 1000\r\n        );\r\n        localStorage.setItem('token', resp.data.idToken);\r\n        localStorage.setItem('localId', resp.data.localId);\r\n        localStorage.setItem('expirationDate', expirationDate);\r\n        setIsAuthenticated(true);\r\n        checkTimeLeft(resp.data.expiresIn);\r\n      })\r\n      .catch(err => {\r\n        console.error(err.message);\r\n        setError(err.message);\r\n      });\r\n  };\r\n  const checkAuthState = () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n      logOut();\r\n    } else {\r\n      const localId = localStorage.getItem('localId');\r\n      const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n      if (expirationDate > new Date()) {\r\n        setToken(token);\r\n        setLocalId(localId);\r\n        setIsAuthenticated(true);\r\n        checkTimeLeft((expirationDate.getTime() - new Date().getTime()) / 1000);\r\n      } else {\r\n        logOut();\r\n      }\r\n    }\r\n  };\r\n  //THIS FUNCTION SEEDS THE FIREBASE DATABASE\r\n  const seedDb = () => {\r\n    const data = {\r\n      items: 'Folders'\r\n    };\r\n    // axios.post('/items.json', data).then(resp => console.log(resp.data));\r\n  };\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        login: loginHandler,\r\n        isAuth: isAuthenticated,\r\n        seedFirebase: seedDb,\r\n        checkAuthState,\r\n        logout: logOut,\r\n        isError: error,\r\n        isLoading,\r\n        token,\r\n        localId\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\nexport default AuthContextProvider;\r\n",
    "static": true,
    "longname": "C:/Users/Osa/Documents/inventory-mgmt/src/components/context/auth-context.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 7,
    "kind": "variable",
    "name": "AuthContext",
    "memberof": "src/components/context/auth-context.js",
    "static": true,
    "longname": "src/components/context/auth-context.js~AuthContext",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/components/context/auth-context.js",
    "importStyle": "{AuthContext}",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 8,
    "kind": "function",
    "name": "AuthContextProvider",
    "memberof": "src/components/context/auth-context.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/context/auth-context.js~AuthContextProvider",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/components/context/auth-context.js",
    "importStyle": "AuthContextProvider",
    "description": null,
    "lineNumber": 15,
    "undocument": true
  },
  {
    "__docId__": 9,
    "kind": "file",
    "name": "src/components/inventory.js",
    "content": "import React, { useState, useCallback, useContext, useEffect } from 'react';\r\nimport classes from './inventory.module.scss';\r\nimport InventoryList from './inventoryList';\r\nimport InventoryForm from './inventoryForm';\r\nimport Modal from './UI/modal';\r\nimport Nav from './UI/nav';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AuthContext } from './context/auth-context';\r\nimport useHttp from './hooks/http';\r\nconst Inventory = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const [data, setData] = useState([]);\r\n  const [runOnce, setRunOnce] = useState(true);\r\n  const [dismissModal, setDismissModal] = useState(false);\r\n  const { isLoading, fetchedData, error, fetchData } = useHttp();\r\n  useEffect(() => {\r\n    if (authContext.token !== null) {\r\n      fetchData(authContext.token);\r\n    }\r\n    if (localStorage.getItem('data')) {\r\n      setData(JSON.parse(localStorage.getItem('data')));\r\n    }\r\n    return () => null;\r\n  }, [fetchData, authContext]);\r\n  const submitHandler = useCallback(formData => {\r\n    setData(prevState => prevState.concat(formData));\r\n    const array = [];\r\n    array.push(formData);\r\n    const oldData = JSON.parse(localStorage.getItem('data'));\r\n    if (oldData) {\r\n      oldData.push(formData);\r\n      localStorage.setItem('data', JSON.stringify(oldData));\r\n    } else {\r\n      localStorage.setItem('data', JSON.stringify(array));\r\n    }\r\n  }, []);\r\n\r\n  const decrementInventoryHandler = useCallback(\r\n    id => {\r\n      const index = data.findIndex(el => el.id === id);\r\n      const newData = [].concat(...data);\r\n      newData[index].amount = newData[index].amount - 1;\r\n      setData(newData);\r\n      localStorage.setItem('data', JSON.stringify(data));\r\n    },\r\n    [data]\r\n  );\r\n  const deleteInventoryHandler = useCallback(\r\n    id => {\r\n      let newData = [...data];\r\n      const index = newData.findIndex(el => el.id === id);\r\n      newData.splice(index, 1);\r\n      setData(newData);\r\n      localStorage.setItem('data', JSON.stringify(newData));\r\n    },\r\n    [data]\r\n  );\r\n  const closeModal = () => setDismissModal(true);\r\n  let content = (\r\n    <div className={classes.main}>\r\n      {data.map(el => {\r\n        let amt;\r\n        let quarterTheAmt;\r\n        if (runOnce) {\r\n          amt = el.amount;\r\n          quarterTheAmt = amt * 0.25;\r\n          localStorage.setItem('quarterTheAmount', quarterTheAmt);\r\n          setRunOnce(false);\r\n        }\r\n        quarterTheAmt = localStorage.getItem('quarterTheAmount');\r\n        return (\r\n          el.amount < quarterTheAmt && (\r\n            <Modal\r\n              className={classes.main__modal}\r\n              close={closeModal}\r\n              dismiss={dismissModal}\r\n            >\r\n              {el.name} only has {el.amount} left.\r\n              <br /> Consider re-stocking soon.\r\n            </Modal>\r\n          )\r\n        );\r\n      })}\r\n      <Nav />\r\n      <InventoryForm\r\n        submitHandler={submitHandler}\r\n        dropdown={fetchedData}\r\n        isLoading={isLoading}\r\n        error={error}\r\n      />\r\n      <InventoryList\r\n        inventory={data}\r\n        deleteHandler={deleteInventoryHandler}\r\n        decreaseInventory={decrementInventoryHandler}\r\n      />\r\n    </div>\r\n  );\r\n  if (!authContext.isAuth) {\r\n    content = <Redirect to=\"/auth\" />;\r\n  }\r\n  console.log(fetchedData);\r\n  return content;\r\n};\r\n\r\nexport default Inventory;\r\n",
    "static": true,
    "longname": "C:/Users/Osa/Documents/inventory-mgmt/src/components/inventory.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 10,
    "kind": "function",
    "name": "Inventory",
    "memberof": "src/components/inventory.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/inventory.js~Inventory",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/components/inventory.js",
    "importStyle": "Inventory",
    "description": null,
    "lineNumber": 10,
    "undocument": true
  },
  {
    "__docId__": 11,
    "kind": "file",
    "name": "src/components/inventoryForm.js",
    "content": "import React, { useState } from 'react';\r\nimport classes from './inventoryForm.module.scss';\r\nimport Modal from './UI/modal';\r\n// import classes from './inventoryForm.module.scss';\r\nconst InventoryForm = React.memo(props => {\r\n  const [option, setOption] = useState('');\r\n  const [amount, setAmount] = useState(0);\r\n  const [dismissModal, setDismissModal] = useState(false);\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    const id = Math.floor(Math.random() * 10000);\r\n    props.submitHandler({\r\n      name: option,\r\n      amount: parseInt(amount),\r\n      id\r\n    });\r\n  };\r\n  const closeModal = () => setDismissModal(true);\r\n  let content = (\r\n    <div className={classes.section}>\r\n      <form className={classes.form} onSubmit={submitHandler}>\r\n        {!props.isLoading && props.dropdown !== null ? (\r\n          <select onChange={e => setOption(e.target.value)}>\r\n            <option selected>Pick inventory item</option>\r\n            {props.dropdown.map(el => (\r\n              <option key={el.id} value={el.items}>\r\n                {el.items}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        ) : (\r\n          <p>Loading...</p>\r\n        )}\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Amount\"\r\n          onChange={e => setAmount(e.target.value)}\r\n        />\r\n        <button className={classes.submit} type=\"submit\">\r\n          submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n  if (props.error) {\r\n    content = (\r\n      <Modal close={closeModal} dismiss={dismissModal}>\r\n        Trouble loading data. Please refresh the page.\r\n      </Modal>\r\n    );\r\n  }\r\n  return content;\r\n});\r\n\r\nexport default InventoryForm;\r\n",
    "static": true,
    "longname": "C:/Users/Osa/Documents/inventory-mgmt/src/components/inventoryForm.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 12,
    "kind": "variable",
    "name": "InventoryForm",
    "memberof": "src/components/inventoryForm.js",
    "static": true,
    "longname": "src/components/inventoryForm.js~InventoryForm",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/components/inventoryForm.js",
    "importStyle": "InventoryForm",
    "description": null,
    "lineNumber": 5,
    "undocument": true
  },
  {
    "__docId__": 13,
    "kind": "file",
    "name": "src/components/inventoryList.js",
    "content": "import React from 'react';\r\nimport classes from './inventoryList.module.scss';\r\nimport { IoIosClose } from 'react-icons/io';\r\nconst InventoryList = React.memo(props => {\r\n  return (\r\n    props.inventory && (\r\n      <div className={classes.uCenter}>\r\n        <h2 className={classes.headingSecondary}>STOCK LEFT</h2>\r\n        <div className={classes.inventoryList}>\r\n          <ul>\r\n            {props.inventory.map(el => (\r\n              <div key={el.id}>\r\n                <li key={el.id}>\r\n                  <span>{el.name}</span>\r\n                  <span>{el.amount}</span>\r\n                  <span onClick={() => props.deleteHandler(el.id)}>\r\n                    <IoIosClose className={classes.inventoryList__delete} />\r\n                  </span>\r\n                </li>\r\n                <div className={classes.uCenter}>\r\n                  <button\r\n                    className={classes.inventoryList__decrease}\r\n                    onClick={() => props.decreaseInventory(el.id)}\r\n                  >\r\n                    Decrease\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n});\r\n\r\nexport default InventoryList;\r\n",
    "static": true,
    "longname": "C:/Users/Osa/Documents/inventory-mgmt/src/components/inventoryList.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 14,
    "kind": "variable",
    "name": "InventoryList",
    "memberof": "src/components/inventoryList.js",
    "static": true,
    "longname": "src/components/inventoryList.js~InventoryList",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/components/inventoryList.js",
    "importStyle": "InventoryList",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 15,
    "kind": "file",
    "name": "src/components/login.js",
    "content": "import React, { useState, useContext } from 'react';\r\nimport classes from './login.module.scss';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { AuthContext } from './context/auth-context';\r\nimport Modal from './UI/modal';\r\nimport Spinner from './UI/spinner';\r\nconst Login = () => {\r\n  const authContext = useContext(AuthContext);\r\n  const [Username, setUsername] = useState('');\r\n  const [Password, setPassword] = useState('');\r\n  const [dismissModal, setDismissModal] = useState(false);\r\n  const errorMessage =\r\n    'Unable to sign in at this moment. Please try again later';\r\n  const closeModal = () => setDismissModal(true);\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    console.log(Username);\r\n    console.log(Password);\r\n    authContext.login(Username, Password);\r\n    console.log(authContext.isAuth);\r\n  };\r\n  let content = (\r\n    <div className={classes.section}>\r\n      <form className={classes.form} onSubmit={submitHandler}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Username\"\r\n          onChange={e => setUsername(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          onChange={e => setPassword(e.target.value)}\r\n        />\r\n        <button className={classes.submit} type=\"submit\">\r\n          Login\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  if (authContext.isAuth) {\r\n    content = <Redirect to=\"/\" />;\r\n  }\r\n  if (authContext.isLoading) {\r\n    content = <Spinner />;\r\n  }\r\n\r\n  if (authContext.isError !== null) {\r\n    content = (\r\n      <Modal close={closeModal} dismiss={dismissModal}>\r\n        {errorMessage}\r\n      </Modal>\r\n    );\r\n  }\r\n  return content;\r\n};\r\n\r\nexport default Login;\r\n",
    "static": true,
    "longname": "C:/Users/Osa/Documents/inventory-mgmt/src/components/login.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 16,
    "kind": "function",
    "name": "Login",
    "memberof": "src/components/login.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/login.js~Login",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/components/login.js",
    "importStyle": "Login",
    "description": null,
    "lineNumber": 7,
    "undocument": true
  },
  {
    "__docId__": 17,
    "kind": "file",
    "name": "src/components/logout.js",
    "content": "import React, { useEffect, useContext } from 'react';\r\nimport { AuthContext } from './context/auth-context';\r\nimport { Redirect } from 'react-router-dom';\r\nconst Logout = () => {\r\n  const authContext = useContext(AuthContext);\r\n  useEffect(() => authContext.logout(), [authContext]);\r\n  return <Redirect to=\"/auth\" />;\r\n};\r\n\r\nexport default Logout;\r\n",
    "static": true,
    "longname": "C:/Users/Osa/Documents/inventory-mgmt/src/components/logout.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 18,
    "kind": "function",
    "name": "Logout",
    "memberof": "src/components/logout.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/logout.js~Logout",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/components/logout.js",
    "importStyle": "Logout",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 19,
    "kind": "file",
    "name": "src/components/routes/routes.js",
    "content": "import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport Inventory from '../inventory';\r\nimport Login from '../login';\r\nimport Logout from '../logout';\r\nconst Routes = () => (\r\n  <Router>\r\n    <Switch>\r\n      <Route path=\"/auth\" exact component={Login} />\r\n      <Route path=\"/\" exact component={Inventory} />\r\n      <Route path=\"/logout\" exact component={Logout} />\r\n    </Switch>\r\n  </Router>\r\n);\r\n\r\nexport default Routes;\r\n",
    "static": true,
    "longname": "C:/Users/Osa/Documents/inventory-mgmt/src/components/routes/routes.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 20,
    "kind": "function",
    "name": "Routes",
    "memberof": "src/components/routes/routes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/routes/routes.js~Routes",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/components/routes/routes.js",
    "importStyle": "Routes",
    "description": null,
    "lineNumber": 6,
    "undocument": true
  },
  {
    "__docId__": 21,
    "kind": "file",
    "name": "src/components/UI/modal.js",
    "content": "import React from 'react';\r\nimport { IoIosClose } from 'react-icons/io';\r\nimport classes from './modal.module.scss';\r\nconst Modal = props =>\r\n  !props.dismiss && (\r\n    <div className={classes.backdrop}>\r\n      <div className={classes.modal}>\r\n        <p>{props.children}</p>{' '}\r\n        <span onClick={props.close}>\r\n          <IoIosClose className={classes.modal__icon} />\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\nexport default Modal;\r\n",
    "static": true,
    "longname": "C:/Users/Osa/Documents/inventory-mgmt/src/components/UI/modal.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 22,
    "kind": "function",
    "name": "Modal",
    "memberof": "src/components/UI/modal.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/UI/modal.js~Modal",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/components/UI/modal.js",
    "importStyle": "Modal",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 23,
    "kind": "file",
    "name": "src/components/UI/nav.js",
    "content": "import React from 'react';\r\nimport classes from './nav.module.scss';\r\nimport { Link } from 'react-router-dom';\r\nconst Nav = () => {\r\n  return (\r\n    <nav className={classes.nav}>\r\n      <ul className={classes.mainNav}>\r\n        <li>\r\n          <Link className={classes.link} to=\"/logout\">\r\n            Sign out\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n",
    "static": true,
    "longname": "C:/Users/Osa/Documents/inventory-mgmt/src/components/UI/nav.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 24,
    "kind": "function",
    "name": "Nav",
    "memberof": "src/components/UI/nav.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/UI/nav.js~Nav",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/components/UI/nav.js",
    "importStyle": "Nav",
    "description": null,
    "lineNumber": 4,
    "undocument": true
  },
  {
    "__docId__": 25,
    "kind": "file",
    "name": "src/components/UI/spinner.js",
    "content": "import React from 'react';\r\nimport classes from './spinner.module.scss';\r\nconst spinner = () => <div className={classes.Loader}>Loading...</div>;\r\nexport default spinner;\r\n",
    "static": true,
    "longname": "C:/Users/Osa/Documents/inventory-mgmt/src/components/UI/spinner.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 26,
    "kind": "function",
    "name": "spinner",
    "memberof": "src/components/UI/spinner.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/components/UI/spinner.js~spinner",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/components/UI/spinner.js",
    "importStyle": "spinner",
    "description": null,
    "lineNumber": 3,
    "undocument": true
  },
  {
    "__docId__": 27,
    "kind": "file",
    "name": "src/helpers/helpers.js",
    "content": "import { createBrowserHistory } from 'history';\r\nexport default createBrowserHistory();\r\n",
    "static": true,
    "longname": "C:/Users/Osa/Documents/inventory-mgmt/src/helpers/helpers.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 28,
    "kind": "file",
    "name": "src/index.js",
    "content": "import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport AuthContextProvider from './components/context/auth-context';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport axios from 'axios';\nimport * as serviceWorker from './serviceWorker';\naxios.defaults.baseURL = 'https://inventory-mgmt-4b42b.firebaseio.com';\nReactDOM.render(\n  <Router>\n    <AuthContextProvider>\n      <App />\n    </AuthContextProvider>\n  </Router>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n",
    "static": true,
    "longname": "C:/Users/Osa/Documents/inventory-mgmt/src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 29,
    "kind": "file",
    "name": "src/serviceWorker.js",
    "content": "// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n",
    "static": true,
    "longname": "C:/Users/Osa/Documents/inventory-mgmt/src/serviceWorker.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 30,
    "kind": "variable",
    "name": "isLocalhost",
    "memberof": "src/serviceWorker.js",
    "static": true,
    "longname": "src/serviceWorker.js~isLocalhost",
    "access": null,
    "export": false,
    "importPath": "inventory-mgmt/src/serviceWorker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true
  },
  {
    "__docId__": 31,
    "kind": "function",
    "name": "register",
    "memberof": "src/serviceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/serviceWorker.js~register",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/serviceWorker.js",
    "importStyle": "{register}",
    "description": null,
    "lineNumber": 23,
    "undocument": true
  },
  {
    "__docId__": 32,
    "kind": "function",
    "name": "registerValidSW",
    "memberof": "src/serviceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/serviceWorker.js~registerValidSW",
    "access": null,
    "export": false,
    "importPath": "inventory-mgmt/src/serviceWorker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 57,
    "undocument": true
  },
  {
    "__docId__": 33,
    "kind": "function",
    "name": "checkValidServiceWorker",
    "memberof": "src/serviceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/serviceWorker.js~checkValidServiceWorker",
    "access": null,
    "export": false,
    "importPath": "inventory-mgmt/src/serviceWorker.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 101,
    "undocument": true
  },
  {
    "__docId__": 34,
    "kind": "function",
    "name": "unregister",
    "memberof": "src/serviceWorker.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/serviceWorker.js~unregister",
    "access": null,
    "export": true,
    "importPath": "inventory-mgmt/src/serviceWorker.js",
    "importStyle": "{unregister}",
    "description": null,
    "lineNumber": 129,
    "undocument": true
  },
  {
    "kind": "index",
    "content": "# Inventory Management App\n\nSource code for an inventory management app written with React Hooks, React Router & the ContextAPI.\n",
    "longname": "C:\\Users\\Osa\\Documents\\inventory-mgmt\\README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"inventory-mgmt\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"axios\": \"^0.19.0\",\n    \"esdoc-jsx-plugin\": \"^1.0.0\",\n    \"esdoc-react-plugin\": \"^1.0.1\",\n    \"node-sass\": \"^4.13.0\",\n    \"react\": \"^16.10.2\",\n    \"react-dom\": \"^16.10.2\",\n    \"react-icons\": \"^3.8.0\",\n    \"react-router\": \"^5.1.2\",\n    \"react-router-dom\": \"^5.1.2\",\n    \"react-scripts\": \"3.2.0\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"eslintConfig\": {\n    \"extends\": \"react-app\"\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  },\n  \"devDependencies\": {\n    \"esdoc\": \"^1.1.0\",\n    \"esdoc-standard-plugin\": \"^1.0.0\"\n  }\n}\n",
    "longname": "C:\\Users\\Osa\\Documents\\inventory-mgmt\\package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  }
]